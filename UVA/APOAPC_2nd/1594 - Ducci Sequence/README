[solve1.cc]
16661375    19  Chiahsun Cheng (chiahsun cheng)   Accepted  C++11   0.076   1 mins ago

[1] 0.016
[3] 0.025
...
[18] 0.074


Explanation
-----------

Use  cycle detection algorithm
- No need to store states
 
Consider two function
- next(cur_state) and next2(cur_state)

cycle exists iff next(cur_state) == next2(cur_state) before is_zeros(cur_state)
since next_state is a function of cur_state only

consider a cycle with prefix M and length N
     prefix0 prefix1 ... prefixM %0 %1 %2 .. %N %0 %1 %2 ... %N ...
Once, next(statea) and next2(stateb) enters cycle, there would be a distance between statea and stateb.
  
positions   0 1 2 3 4 5 6 7 8
frame0      2                    # d(2, 1) = 3 
                  1

frame1          2                # d(2, 1) = 2
                    1

frame2              2            # d(2, 1) = 1 
                      1

frame3                   2       # d(2, 1) = 0
                         1

frame4                       2   # d(2,1) = len_cycle-1
                           1
The distance between next(statea) and next2(stateb) would be closer/farther by one  (d(x, y) means it takes d(x, y) for x to be y)
It wouldn't be case that next2(stateb) exceeds next(statea) without being the same position as next(statea)

